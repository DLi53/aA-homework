class LRUCache

    
    def initialize(size)
        @size = size
        @cache = []

    end

    def count
      # returns number of elements currently in cache
      @cache.length
    end

    def add(ele)
      # adds element to cache according to LRU principle
        if @cache.include?(ele)
            @cache.delete(ele)
            @cache << ele
        elsif count >= @size
            @cache.shift
            @cache << ele
        else        
            @cache << ele
        end
    end

    def show
        @cache
      # shows the items in the cache, with the LRU item first
    end

    private
    # helper methods go here!

end